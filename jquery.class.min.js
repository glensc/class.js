/*--------------------------------------------*
 * Useful extensions when
 * you are creating your own
 * javascript objects/classes
 *--------------------------------------------*
 * Orgins from:
 * Simple JavaScript Inheritance and makeClass
 * by John Resig http://ejohn.org/
 *--------------------------------------------*
 * Integrated with jQuery and added
 * functionality by Emil Kilhage
 *--------------------------------------------*
 * Last Update: 2011-01-25 22:41:0
 *--------------------------------------------*/
(function($){var initializing=false,_fnSearchFn=function(){var h=xyz;},fnSearch=/xyz/.test(_fnSearchFn)?/\b_parent\b/:/.*/,id="__is_class__";$.Class=function(setStatic,prop){return $.Class.create(setStatic,prop);};$.extend($.Class,{_unique:"jQueryClass-"+(new Date).getTime(),makeClass:function(){function Class(args){if(this instanceof arguments.callee){if(!initializing&&typeof this.init==="function"){this.init.apply(this,(typeof args==="object"&&args.callee)?args:arguments);}}else{return new arguments.callee(arguments);}};Class[id]=$.Class._unique;return Class;},create:function(setStatic,prop){return BaseClass.extend(setStatic,prop);},addMethods:function(src,prop,classToModify){classToModify=classToModify||src;initializing=true;var _parent=src.prototype,prototype=new src(),name;initializing=false;for(name in prop){if(prop.hasOwnProperty(name)){prototype[name]=typeof _parent[name]==="function"&&typeof prop[name]==="function"&&fnSearch.test(prop[name])&&!$.Class.is(prop[name])?$.Class.rewrite(prop[name],_parent[name]):typeof prop[name]==="object"?$.extend(true,{},prop[name]):prop[name];}}
classToModify.prototype=prototype;return classToModify;},rewrite:function(fn,_parent){return function(){var tmp=this._parent;this._parent=_parent;var ret=fn.apply(this,arguments);this._parent=tmp;return ret;};},is:function(fn){return fn[id]===$.Class._unique;}});var BaseClass=$.extend($.Class.makeClass(),{extend:function(setStatic,prop){var Class=$.Class.makeClass(),n;if(typeof setStatic!=="boolean"){prop=setStatic;setStatic=false;}
for(n in this){if(this.hasOwnProperty(n)){Class[n]=this[n];}}
if(setStatic===true){for(n in prop){if(prop.hasOwnProperty(n)&&n!=="prototype"){Class[n]=typeof prop[n]==="function"&&typeof this[n]==="function"&&!$.Class.is(prop[n])&&fnSearch.test(prop[n])?$.Class.rewrite(prop[n],this[n]):typeof prop[n]==="object"?$.extend(true,{},prop[n]):prop[n];}}
prop=prop.prototype||{};}
Class.constructor=Class;$.Class.addMethods(this,prop,Class);return Class;},addMethods:function(prop){return $.Class.addMethods(this,prop);}});})(jQuery);
