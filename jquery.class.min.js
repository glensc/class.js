/*--------------------------------------------*
 * Info: https://github.com/kilhage/class.js
 *--------------------------------------------*
 * Copyright 2011, Emil Kilhage
 * Released under the MIT License
 *--------------------------------------------*
 * Environment-release: jQuery
 * Last Update: 2011-04-05 02:15:10
 * Version 1.1.0
 *--------------------------------------------*/
jQuery.Class=function(a){function s(b,c,d){var e,f,h,l=function(){if(h===a){var b;h={};for(b in c)i.call(c[b])===k&&(h[b]=r(c[b]))}return h};d===a&&(d=c);for(e in b)j.call(b,e)&&(f=b[e],d[e]=i.call(f)===k&&g.test(f)?q(f,c[e],l):f)}function r(a){return function(){return a.apply(this[d],arguments)}}function q(a,b,c){var e=h.test(a),f=i.call(b)===k?function(){return b.apply(this,arguments)}:function(){throw l.logic_parent_call};return function(){var b=this,g=j.call(b,"_parent"),h=b._parent,i,k,l;if(e===!0){e=!1,l=c();for(k in l)j.call(l,k)&&(f[k]=l[k])}b._parent=f,b._parent[d]=b,i=a.apply(b,arguments),g===!0?b._parent=h:delete b._parent;return i}}function p(){function a(c){var d=this;if(d instanceof a)b===!1&&i.call(d.init)===k&&d.init.apply(d,c&&c.callee===a?c:arguments);else return new a(arguments)}return a}function o(a){return!!a&&a.extend===m.extend}function n(a,b){return m.extend(a,b)}function m(){}"use strict";var b=!1,c="Class",d=c+(new Date).getTime(),e=function(){this._parent()},f=/\b_parent\b/.test(e),g=f?/\b_parent\b/:/.*/,h=f?/\b_parent\b\./:/.*/,i=Object.prototype.toString,j=Object.prototype.hasOwnProperty,k=i.call(e),l={logic_parent_call:c+":Logic error, unable to call the parent "+"function since it isn't defined.."};m.extend=function(a,c){var d=p(),e,f=this,g,h=f.prototype;typeof a!="boolean"&&(c=a),c=typeof c=="object"&&c!==null?c:{},g=c.prototype;for(e in f)j.call(f,e)&&(d[e]=f[e]);if(a===!0||typeof g=="object"&&g!==null)s(c,f,d),c=g;b=!0,g=new f,b=!1,s(c||{},h,g),d.constructor=g.constructor=d,d.prototype=g,d.inherits=function(a){return a===f||f.inherits(a)};return d},m.inherits=function(){return!1},m.addMethods=function(a){s(a,this.prototype)},m.prototype.addMethods=function(a){s(a,this)},n.is=o,n.makeClass=p,n.fnSearch=g,n.parentFnSearch=h,n.errors=l;return n}();
