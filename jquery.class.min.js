/*--------------------------------------------*
 * Useful extensions when
 * you are creating your own
 * javascript objects/classes
 *--------------------------------------------*
 * Orgins from:
 * Simple JavaScript Inheritance and makeClass
 * by John Resig http://ejohn.org/
 *--------------------------------------------*
 * Integrated with jQuery and added
 * functionality by Emil Kilhage
 *--------------------------------------------*
 * Last Update: 2010-11-18 21:00:10
 *--------------------------------------------*/
(function(h){var i=false,l=/xyz/.test(function(){})?/\b_parent\b/:/.*/,f=h.Class=h.extend(function(a){return f.create(a)},{makeClass:function(){return function(a){if(this instanceof arguments.callee){if(!i&&typeof this.init==="function")this.init.apply(this,typeof a==="object"&&a.callee?a:arguments)}else return new arguments.callee(arguments)}},create:function(a){return j.extend(a)},addMethods:function(a,d,b){b=b||a;i=true;var e=a.prototype;a=new a;i=false;for(var c in d)if(d.hasOwnProperty(c))a[c]=
typeof e[c]==="function"&&typeof d[c]==="function"&&l.test(d[c])?function(){return function(m,n){var o=this._parent;this._parent=e[m];var p=n.apply(this,arguments);this._parent=o;return p}}(c,d[c]):d[c];b.prototype=a;return b}}),j=h.extend(f.makeClass(),{extend:function(a,d){var b=f.makeClass(),e,c=d?this:k;for(e in c)if(typeof this[e]==="function")b[e]=this[e];b.constructor=b;f.addMethods(this,a,b);return b},addMethods:function(a){return f.addMethods(this,a)}}),k={},g;for(g in j)if(typeof j[g]===
"function")k[g]=g})(jQuery);
