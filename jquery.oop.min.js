/*
 * Useful extensions when
 * you are creating your own
 * javascript objects/classes
 *
 * Orgins from:
 * Simple JavaScript Inheritance and makeClass
 * by John Resig http://ejohn.org/
 *
 * Integrated with jQuery and added functionality by Emil Kilhage
 */
(function($){var i=false,_fnSearch=/xyz/.test(function(){xyz});$.extend({Class:function(a){return $.Class.create(a)},fnSearch:function(a,b){return(_fnSearch?new RegExp("\\b"+a+"\\b"):/.*/).test(b)}});$.extend($.Class,{makeClass:function(){var b=function(a){if(this instanceof arguments.callee){if(!i&&$.isFunction(this.init)){this.init.apply(this,(typeof a==="object"&&a.callee)?a:arguments)}}else{return new arguments.callee(arguments)}};b.constructor=b;return b},create:function(a){return j.extend(a)},addMethods:function(a,b,c){c=c||a;i=true;var d=new a();i=false;return c.prototype=this._addMethods(d,b,a.prototype)},_addMethods:function(e,f,g){g=g||{};for(var h in f){e[h]=$.isFunction(f[h])&&$.isFunction(g[h])&&$.fnSearch("_parent",f[h])?(function(c,d){return function(){var a=this._parent;this._parent=g[c];var b=d.apply(this,arguments);this._parent=a;return b}})(h,f[h]):f[h]}return e}});var j=$.Class.makeClass();j.extend=function(b){var c=$.Class.makeClass();$.Class.addMethods(this,b,c);c.extend=arguments.callee;c.addMethods=function(a){$.Class.addMethods(this,a)};return c}}(jQuery));
