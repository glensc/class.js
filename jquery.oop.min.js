/*--------------------------------------------*
 * Useful extensions when
 * you are creating your own
 * javascript objects/classes
 *--------------------------------------------*
 * Orgins from:
 * Simple JavaScript Inheritance and makeClass
 * by John Resig http://ejohn.org/
 *--------------------------------------------*
 * Integrated with jQuery and added
 * functionality by Emil Kilhage
 *--------------------------------------------*
 * Last Update: 2010-11-14 05:19:33
 *--------------------------------------------*/
(function(i){var j=false,m=/xyz/.test(function(){})?/\b_parent\b/:/.*/,f=i.Class=i.extend(function(a){return f.create(a)},{makeClass:function(){return function(a){if(this instanceof arguments.callee){if(!j&&typeof this.init==="function")this.init.apply(this,typeof a==="object"&&a.callee?a:arguments)}else return new arguments.callee(arguments)}},create:function(a){return k.extend(a)},addMethods:function(a,c,b){function e(n,o){return function(){var p=this._parent;this._parent=g[n];var q=o.apply(this,
arguments);this._parent=p;return q}}b=b||a;j=true;var g=a.prototype;a=new a;j=false;for(var d in c)if(c.hasOwnProperty(d))a[d]=typeof g[d]==="function"&&typeof c[d]==="function"&&m.test(c[d])?e(d,c[d]):c[d];b.prototype=a;return b}}),k=i.extend(f.makeClass(),{extend:function(a,c){var b=f.makeClass(),e,g=c?this:l;for(e in g)if(typeof this[e]==="function")b[e]=this[e];b.constructor=b;f.addMethods(this,a,b);return b},addMethods:function(a){return f.addMethods(this,a)}}),l={},h;for(h in k)if(typeof k[h]===
"function")l[h]=h})(jQuery);
